#!/usr/bin/env bash

terraria_port=7777
port=${1:-${PORT:-8080}}

# Start the TCP tunnel
if [ -z "$HOST_DOMAIN" ]; then
  serveo_cmd="ssh -o StrictHostKeyChecking=no -R terraria:7777:localhost:${terraria_port} serveo.net -i trr"
else
  serveo_cmd="ssh -o StrictHostKeyChecking=no -R ${HOST_DOMAIN}:7777:localhost:${terraria_port} serveo.net -i trr"
fi

echo "Starting serveo..."
eval "$serveo_cmd | tee serveo.log &"
ngrok_pid=$!

# Do an inline sync first, then start the background job
echo "Starting sync..."
bin/sync
eval "while true; do sleep ${AWS_SYNC_INTERVAL:-60}; bin/sync; done &"
sync_pid=$!

echo "Starting: terraria ${terraria_port}"
ls world
script /app/bin/run_terraria
main_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1

echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

trap "kill $ngrok_pid $main_pid $sync_pid $tail_pid" SIGTERM
trap "kill -9 $ngrok_pid $main_pid $sync_pid $tail_pid; exit" SIGKILL

eval "ruby -rwebrick -e'WEBrick::HTTPServer.new(:BindAddress => \"0.0.0.0\", :Port => ${port}, :MimeTypes => {\"rhtml\" => \"text/html\"}, :DocumentRoot => Dir.pwd).start'"

